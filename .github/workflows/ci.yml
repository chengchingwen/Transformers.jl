name: CI
on:
  push:
    branches:
      - master
    tags: '*'
  pull_request:
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.julia-threads }} thread(s) - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    permissions: # needed to allow julia-actions/cache to proactively delete old caches that it has created
      actions: write
      contents: read
    env:
      JULIA_NUM_THREADS: ${{ matrix.julia-threads }}
      JL_TRF_TEST_TKR: ${{ matrix.test-hgf-tkr }}
      HUGGINGFACEHUB_TOKEN: ${{ secrets.HUGGINGFACEHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10' # Replace this with the minimum Julia version that your package supports.
          - '1.11'
          # - '1'   # automatically expands to the latest stable 1.x release of Julia
          # - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
        julia-threads:
          - '1'
        test-hgf-tkr:
          - 'false'
        include:
          - os: windows-latest
            version: '1'
            arch: x64
            julia-threads: '1'
          - os: macOS-latest
            version: '1'
            arch: x64
            julia-threads: '1'
          - os: ubuntu-latest
            version: '1'
            arch: x64
            julia-threads: '2'
            test-hgf-tkr: 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/install-juliaup@v2
        with:
          channel: ${{ matrix.version }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      actions: write # needed to allow julia-actions/cache to proactively delete old caches that it has created
      contents: write
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - name: Configure doc environment
        shell: julia --project=docs --color=yes {0}
        run: |
          using Pkg
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.instantiate()
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - name: Run doctests
        shell: julia --project=docs --color=yes {0}
        run: |
          using Documenter: DocMeta, doctest
          using Transformers
          DocMeta.setdocmeta!(Transformers, :DocTestSetup, :(using Transformers); recursive=true)
          doctest(Transformers)
